Name: Hannah Housand
Date: 4/3/25
Assignment: 4
Due Date: 4/14/25

About this assignment:
    This assignment implements three parallel versions of the Game of Life using pthreads, OpenMP
    and MPI. OpenMP uses compiler directives for parallelism. The pthread version uses a master-
    worker method with dynamic task storage and progressively smaller tasks. The MPI one divides the
    grid among different processes that communicate via message passing. All implementations produce
    identical results and achieve at least 4.1x speedup compared to the sequential version to
    demonstrate their efficiency.

Assumptions:
    - There is a fixed max number of threads (64) nd a max number of tasks (10000) because this is
        higher than the max on linprog and my local machine
    - There are some conditions for program termination, including 200 iterations being done,
        population grows to 50x the initial count, and population shrinks to 1/50 the initial count
    - The pthread implementation uses the master-worker method
    - The task size decreases as the program executes in the pthread implementation
    - There is a max of 2 sends and 2 receives at a time per process
    - The speedup for the mpi implementation changes based on the number of processes it uses
        so it is above 4.1 with at least 6 processes

All work in this assignment was performed solely by Hannah Housand.

I used code generated by an AI tool. It is marked wherever I used it.

Demo:
    For the demo, the general process will be testing correctness for each of the implementations,
    then testing speedup for all fo them compared to the sequential version.
